* tsukimi project

* What's this?

This will be a couple of attempt to achieve support for processing[*1] under
moonlight[*2].
[*1] http://processing.org/
[*2] http://mono-project.com/Moonlight

So far there are two assemblies as outcome from this project:

	- Processing.Core.dll : this aims to support processing standard
	  library, to make applications runnable under Moonlight.
	- processingimporter.exe : this is to import processing application
	  and generate Moonlight application (xap package etc.).
	  The resulting application should run under Silverlight too, but
	  it is not tested at all.

** Dependencies

	You need moon built and installed.
	Note that I don't mean novell-moonlight.xpi (firefox plugin).
	This application depends on "mxap".

	Also it depends on "zip" command when it imports application.

** Usage

	First, build the assemblies above by running "make".

	Then, go to processing application directory (I recommend to
	create a copy of the original application, as this will generate
	extra files on the directory) and run:

		mono processingimporter.exe --xap .

	Then it will generate xap package, stub html and so on (it is
	actually what mxap does).

** Plans

	- Write processing parser that parses processing files (*.pde) to
	  the AST.
	- Write "processing foundation library" for common functions and
	  classes.
	- Write code generator that is based on System.Windows.dll.
	  Not sure we generate either of some source code or direct IL.
	  So far we generate C# sources directly.

*** TODOs

	- Make StandardLibrary as an instance so that global variables and
	  local variables can be distinguished without adding lengthy
	  "StandardLibrary." to global ones.
	- support draw(). There is no animation yet.
	  Not sure if we can support it though.
	- A lot of library features are missing.

** Source Files

	- processing_syntax.txt:
	  my analysis on processing syntax. It is based on 1.0 beta.

	- skeleton.cs :
	  taken from mcs (jay).

** Assemblies

	- ProcessingCli.Core.dll:
	  contains StandardLibrary and fundamental control types.
	- processingimporter.exe:
	  pde parser and XAML generator, possibly more.

** Parser/Converter

*** Some Details

	- *.pde files are parsed to build AstRoot.
	- "Global" class is generated to hold global members.
	- For each top level contents in AstRoot:
	-- A class is converted to generate a managed class.
	-- A global function definition is converted to a method of Global class.
	-- A statement is converted to become a statement in Global.Run().


